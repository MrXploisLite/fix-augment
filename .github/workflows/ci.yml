name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Xvfb (Linux only)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libxkbfile-dev libsecret-1-dev
    
    - name: Lint code
      run: npm run lint
    
    - name: Compile TypeScript
      run: npm run compile
    
    - name: Run tests (Linux with Xvfb)
      if: runner.os == 'Linux'
      run: xvfb-run -a npm test
      env:
        CI: true
    
    - name: Run tests (Non-Linux)
      if: runner.os != 'Linux'
      run: npm test
      env:
        CI: true
    
    - name: Upload coverage
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  code-quality:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npm run lint -- --format json --output-file eslint-report.json
      continue-on-error: true

    # Note: SonarCloud requires SONAR_TOKEN secret to be configured in GitHub repository settings
    # To set up: Repository Settings -> Secrets and variables -> Actions -> New repository secret
    # Get the token from: https://sonarcloud.io/account/security
    - name: SonarCloud Scan
      if: secrets.SONAR_TOKEN != ''
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: 'https://sonarcloud.io'

    - name: Skip SonarCloud Scan (missing SONAR_TOKEN)
      if: secrets.SONAR_TOKEN == ''
      run: echo "::warning::Skipping SonarCloud scan because the SONAR_TOKEN secret is not configured. See .github/ACTIONS_SETUP.md for setup instructions."

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Note: Snyk requires SNYK_TOKEN secret to be configured in GitHub repository settings
    # To set up SNYK_TOKEN:
    # 1. Create a free Snyk account at https://snyk.io/
    # 2. Get your API token from: https://app.snyk.io/account (Account Settings -> API Token)
    # 3. Add it to GitHub: Repository Settings -> Secrets and variables -> Actions -> New repository secret
    # 4. Name: SNYK_TOKEN, Value: [Your Snyk API token]
    - name: Run Snyk Security Scan
      if: secrets.SNYK_TOKEN != ''
      uses: snyk/actions/node@v4
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        command: test
        args: --severity-threshold=high

    - name: Skip Snyk Security Scan (missing SNYK_TOKEN)
      if: secrets.SNYK_TOKEN == ''
      run: echo "::warning::Skipping Snyk scan because the SNYK_TOKEN secret is not configured. See .github/ACTIONS_SETUP.md for setup instructions."

    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true

  build:
    name: Build Extension
    runs-on: ubuntu-latest
    needs: [test, code-quality]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Compile
      run: npm run compile
    
    - name: Copy webview files
      run: npm run copy-webview
    
    - name: Package extension
      run: npm run package
    
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: fix-augment-vsix
        path: '*.vsix'
        retention-days: 30

  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Xvfb
      run: |
        sudo apt-get update
        sudo apt-get install -y xvfb libxkbfile-dev libsecret-1-dev
    
    - name: Run performance tests
      run: xvfb-run -a npm run test:performance
      continue-on-error: true
    
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      with:
        name: performance-results
        path: performance-results.json
